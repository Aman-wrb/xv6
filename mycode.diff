diff --git a/mycode.diff b/mycode.diff
index ca75de6..e69de29 100644
--- a/mycode.diff
+++ b/mycode.diff
@@ -1,126 +0,0 @@
-diff --git a/.vscode/launch.json b/.vscode/launch.json
-index 1a3d89d..2148bf0 100644
---- a/.vscode/launch.json
-+++ b/.vscode/launch.json
-@@ -2,13 +2,17 @@
-     "version": "0.2.0",
-     "configurations": [
-         {
--            "type": "gdb",
--            "request": "attach",
--            "name": "debug xv6",
--            "executable": "kernel",
--            "target": ":26328",
--            "remote": true,
-+            "type": "by-gdb",
-+            "request": "launch",
-+            "name": "Launch(remote)",
-+            "program": "${workspaceRoot}/kernel",
-             "cwd": "${workspaceRoot}",
-+            "remote": {
-+                "enabled": true,
-+                "address": ":28480",
-+                "mode": "remote",
-+                "execfile": "${workspaceRoot}/kernel"
-+            }
-         }
-     ]
- }
-\ No newline at end of file
-diff --git a/Makefile b/Makefile
-index ef245d2..761b909 100644
---- a/Makefile
-+++ b/Makefile
-@@ -76,7 +76,7 @@ AS = $(TOOLPREFIX)gas
- LD = $(TOOLPREFIX)ld
- OBJCOPY = $(TOOLPREFIX)objcopy
- OBJDUMP = $(TOOLPREFIX)objdump
--CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer
-+CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O0 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -gdwarf-2
- CFLAGS += $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
- ASFLAGS = -m32 -gdwarf-2 -Wa,-divide
- # FreeBSD ld wants ``elf_i386_fbsd''
-diff --git a/proc.c b/proc.c
-index e70c5bd..7695652 100644
---- a/proc.c
-+++ b/proc.c
-@@ -554,26 +554,30 @@ waitpid(int id, int *status, int options){
-     // Scan through table looking for exited children.
-     havekids = 0;
-     for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
--      if(p->parent != curproc) //p is 
--        continue;
--      havekids = 1;
--    if(p->pid == id){}
--      if(p->state == ZOMBIE){
--        // Found one.
--        pid = p->pid;
--        kfree(p->kstack);
--        p->kstack = 0;
--        freevm(p->pgdir);
--        p->pid = 0;
--        p->parent = 0;
--        p->name[0] = 0;
--        p->killed = 0;
--        p->state = UNUSED;
--        release(&ptable.lock);
--        return pid;
-+      // if(p->parent != curproc) //p is 
-+      //   continue;
-+      if(p->pid == id){
-+        havekids = 1;
-+        if(p->state == ZOMBIE){
-+          // Found one.
-+          pid = p->pid;
-+          kfree(p->kstack);
-+          p->kstack = 0;
-+          freevm(p->pgdir);
-+          p->pid = 0;
-+          p->parent = 0;
-+          p->name[0] = 0;
-+          p->killed = 0;
-+          p->state = UNUSED;
-+          *status = p->status;
-+          // cprintf("%d %x\n", *status, status);
-+          release(&ptable.lock);
-+          return pid;
-+        }
-       }
-     }
- 
-+
-     // No point waiting if we don't have any children.
-     if(!havekids || curproc->killed){
-       release(&ptable.lock);
-diff --git a/sysproc.c b/sysproc.c
-index 2a053db..65c0280 100644
---- a/sysproc.c
-+++ b/sysproc.c
-@@ -26,7 +26,7 @@ int
- sys_wait(void)
- {
-   int *d;
--  argptr(0,(char**)&d, sizeof(int*));
-+  argptr(0,(char**)&d, 0);
-   return wait(d);
- }
- 
-@@ -102,8 +102,13 @@ sys_hello(void) {
- 
- int 
- sys_waitpid(void){
--  int pid = 1; 
--  int options = 1;
--  int status;
--  return waitpid(pid, &status, options);
-+  int pid; 
-+  int options;
-+  int* status;
-+
-+  argint(0, &pid);
-+  argint(1, &options);
-+  argptr(1,(char**)&status,0);
-+
-+  return waitpid(pid,status, options);
- }
-\ No newline at end of file
